{
    "contractName": "MainContract",
    "abi": [
        {
            "inputs": [
                {
                    "internalType": "string",
                    "name": "name",
                    "type": "string"
                },
                {
                    "internalType": "string",
                    "name": "symbol",
                    "type": "string"
                },
                {
                    "internalType": "uint256",
                    "name": "initialSupply",
                    "type": "uint256"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "constructor"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "allowance",
                    "type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "needed",
                    "type": "uint256"
                }
            ],
            "name": "ERC20InsufficientAllowance",
            "type": "error"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "sender",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "balance",
                    "type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "needed",
                    "type": "uint256"
                }
            ],
            "name": "ERC20InsufficientBalance",
            "type": "error"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "approver",
                    "type": "address"
                }
            ],
            "name": "ERC20InvalidApprover",
            "type": "error"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "receiver",
                    "type": "address"
                }
            ],
            "name": "ERC20InvalidReceiver",
            "type": "error"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "sender",
                    "type": "address"
                }
            ],
            "name": "ERC20InvalidSender",
            "type": "error"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                }
            ],
            "name": "ERC20InvalidSpender",
            "type": "error"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                }
            ],
            "name": "Approval",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "from",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                }
            ],
            "name": "Transfer",
            "type": "event"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                }
            ],
            "name": "allowance",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                }
            ],
            "name": "approve",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "account",
                    "type": "address"
                }
            ],
            "name": "balanceOf",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                }
            ],
            "name": "burn",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "decimals",
            "outputs": [
                {
                    "internalType": "uint8",
                    "name": "",
                    "type": "uint8"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                }
            ],
            "name": "mint",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "name",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "owner",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "symbol",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "totalSupply",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                }
            ],
            "name": "transfer",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "from",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                }
            ],
            "name": "transferFrom",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        }
    ],
    "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"initialSupply\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"c:/Users/goagv/Documents/PROGRAMACIONWEB3/ERC_ ANON/zk-erc20-project/src/MainContract.sol\":\"MainContract\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"c:/Users/goagv/Documents/PROGRAMACIONWEB3/ERC_ ANON/zk-erc20-project/lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0xe53865a480e99e5c35c3b1fd673cdccae2b5ddb7e0260e82b19d40d99980e146\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd6c5d37ed3bbb994f5d63f62bfec105dd9dbd11ae8cecdb93232d64a9677143\",\"dweb:/ipfs/QmefNhF6r94wZBqL2XxZMvkrGr4WgLLoWts5oasPWpMUun\"]},\"c:/Users/goagv/Documents/PROGRAMACIONWEB3/ERC_ ANON/zk-erc20-project/lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xdd0a585e22b0ee75d9b326c251df05a910d8edccab17e4db3cfd7e00f7169b84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e6f23becda6cd87e9d96803e35647b3a8973dadc082b0d7344b0fd3232f83c25\",\"dweb:/ipfs/QmdXggVZu4S5eP7uAvW1STAxtfXnAaiUFB3LDU5ohQv6e9\"]},\"c:/Users/goagv/Documents/PROGRAMACIONWEB3/ERC_ ANON/zk-erc20-project/lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x01e4bd12aef9e3d0956451e6ac9ece01554db0bc484ebc9287e5d57b4fd431d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb6de9142941eb74004600d0b23a0753846824648e6ddc23bc93889d03a79441\",\"dweb:/ipfs/QmckMYX9vjZNEx4pLGt6ePpvRcYuvt8s2zWoqSHxX2niHZ\"]},\"c:/Users/goagv/Documents/PROGRAMACIONWEB3/ERC_ ANON/zk-erc20-project/lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x5b0e97d38fc94a3e9031e6f6bb948991499dd5fd9fbe74898326e1b5cecc61b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f326d045fa9d7fa02f53b5c0750830127e98c4c3d104ef207ed3bb272d049f89\",\"dweb:/ipfs/QmTGhzTSMdCRZr5JWA48ZoujUPT6LWK3qJnQx2Xq8Z6i3m\"]},\"c:/Users/goagv/Documents/PROGRAMACIONWEB3/ERC_ ANON/zk-erc20-project/lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x3dcd533a3f709bda89bb8e649eb97aed96578e606f3796609544b1dcff975a0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://83fa9b15077fd2f33f6c175d694e2f7ae9c9a289c7feaca40aa7d6feb8d87c26\",\"dweb:/ipfs/QmQLfKCJ7mjiEeCGN1sHgWT8wjAMbAmBqcBVoQQyUZa5ws\"]},\"c:/Users/goagv/Documents/PROGRAMACIONWEB3/ERC_ ANON/zk-erc20-project/src/MainContract.sol\":{\"keccak256\":\"0x0c5efe1df9219a45e35cedc8a205b59ba48b2f55bca0061750fc886dfa88026b\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://30b566c7ec55eda744ca3d68386368bf697ca15e1c982966b6f3f3e55b266347\",\"dweb:/ipfs/QmWBZrYZg2vV2fDdejP9EAB3rPHr7obt1yBkXRrkQLiyru\"]}},\"version\":1}",
    "bytecode": "6080604052346103a957610bea80380380610019816103ad565b9283398101906060818303126103a95780516001600160401b0381116103a957826100459183016103d2565b60208201519092906001600160401b0381116103a9576040916100699184016103d2565b91015182516001600160401b0381116102ba57600354600181811c9116801561039f575b602082101461029c57601f811161033c575b506020601f82116001146102d957819293945f926102ce575b50508160011b915f199060031b1c1916176003555b81516001600160401b0381116102ba57600454600181811c911680156102b0575b602082101461029c57601f8111610239575b50602092601f82116001146101d857928192935f926101cd575b50508160011b915f199060031b1c1916176004555b600580546001600160a01b03191633908117909155156101ba576002548181018091116101a657600255335f525f60205260405f208181540190556040519081525f7fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60203393a36040516107c690816104248239f35b634e487b7160e01b5f52601160045260245ffd5b63ec442f0560e01b5f525f60045260245ffd5b015190505f8061011a565b601f1982169360045f52805f20915f5b8681106102215750836001959610610209575b505050811b0160045561012f565b01515f1960f88460031b161c191690555f80806101fb565b919260206001819286850151815501940192016101e8565b60045f527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b601f830160051c81019160208410610292575b601f0160051c01905b8181106102875750610100565b5f815560010161027a565b9091508190610271565b634e487b7160e01b5f52602260045260245ffd5b90607f16906100ee565b634e487b7160e01b5f52604160045260245ffd5b015190505f806100b8565b601f1982169060035f52805f20915f5b8181106103245750958360019596971061030c575b505050811b016003556100cd565b01515f1960f88460031b161c191690555f80806102fe565b9192602060018192868b0151815501940192016102e9565b60035f527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b601f830160051c81019160208410610395575b601f0160051c01905b81811061038a575061009f565b5f815560010161037d565b9091508190610374565b90607f169061008d565b5f80fd5b6040519190601f01601f191682016001600160401b038111838210176102ba57604052565b81601f820112156103a9578051906001600160401b0382116102ba57610401601f8301601f19166020016103ad565b92828452602083830101116103a957815f9260208093018386015e830101529056fe6080806040526004361015610012575f80fd5b5f3560e01c90816306fdde03146105d457508063095ea7b31461055257806318160ddd1461053557806323b872dd14610456578063313ce5671461043b57806340c10f191461033f57806342966c681461029f57806370a08231146102685780638da5cb5b1461024057806395d89b4114610125578063a9059cbb146100f45763dd62ed3e146100a0575f80fd5b346100f05760403660031901126100f0576100b96106cd565b6100c16106e3565b6001600160a01b039182165f908152600160209081526040808320949093168252928352819020549051908152f35b5f80fd5b346100f05760403660031901126100f05761011a6101106106cd565b60243590336106f9565b602060405160018152f35b346100f0575f3660031901126100f0576040515f6004548060011c90600181168015610236575b6020831081146102225782855290811561020657506001146101b1575b50819003601f01601f191681019067ffffffffffffffff82118183101761019d57610199829182604052826106a3565b0390f35b634e487b7160e01b5f52604160045260245ffd5b905060045f527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b5f905b8282106101f057506020915082010182610169565b60018160209254838588010152019101906101db565b90506020925060ff191682840152151560051b82010182610169565b634e487b7160e01b5f52602260045260245ffd5b91607f169161014c565b346100f0575f3660031901126100f0576005546040516001600160a01b039091168152602090f35b346100f05760203660031901126100f0576001600160a01b036102896106cd565b165f525f602052602060405f2054604051908152f35b346100f05760203660031901126100f057600435331561032c57335f525f60205260405f20548181106103135790805f923384528360205203604083205580600254036002556040519081527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60203392a3005b63391434e360e21b5f523360045260245260445260645ffd5b634b637e8f60e11b5f525f60045260245ffd5b346100f05760403660031901126100f0576103586106cd565b60055460243591906001600160a01b031633036103f6576001600160a01b03169081156103e357600254908082018092116103cf5760207fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef915f9360025584845283825260408420818154019055604051908152a3005b634e487b7160e01b5f52601160045260245ffd5b63ec442f0560e01b5f525f60045260245ffd5b60405162461bcd60e51b815260206004820152601e60248201527f4f6e6c7920746865206f776e65722063616e206d696e7420746f6b656e7300006044820152606490fd5b346100f0575f3660031901126100f057602060405160128152f35b346100f05760603660031901126100f05761046f6106cd565b6104776106e3565b6001600160a01b0382165f818152600160209081526040808320338452909152902054909260443592915f1981106104b5575b5061011a93506106f9565b83811061051a5784156105075733156104f45761011a945f52600160205260405f2060018060a01b0333165f526020528360405f2091039055846104aa565b634a1406b160e11b5f525f60045260245ffd5b63e602df0560e01b5f525f60045260245ffd5b8390637dc7a0d960e11b5f523360045260245260445260645ffd5b346100f0575f3660031901126100f0576020600254604051908152f35b346100f05760403660031901126100f05761056b6106cd565b602435903315610507576001600160a01b03169081156104f457335f52600160205260405f20825f526020528060405f20556040519081527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560203392a3602060405160018152f35b346100f0575f3660031901126100f0575f6003548060011c90600181168015610699575b6020831081146102225782855290811561020657506001146106445750819003601f01601f191681019067ffffffffffffffff82118183101761019d57610199829182604052826106a3565b905060035f527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5f905b82821061068357506020915082010182610169565b600181602092548385880101520191019061066e565b91607f16916105f8565b602060409281835280519182918282860152018484015e5f828201840152601f01601f1916010190565b600435906001600160a01b03821682036100f057565b602435906001600160a01b03821682036100f057565b6001600160a01b031690811561032c576001600160a01b03169182156103e357815f525f60205260405f205481811061077757817fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92602092855f525f84520360405f2055845f525f825260405f20818154019055604051908152a3565b8263391434e360e21b5f5260045260245260445260645ffdfea264697066735822122028b83578a3c90998cc038d7bd212cab560818fc515f84f4c8e25b14b73da0bc564736f6c634300081c0033",
    "deployedBytecode": "6080806040526004361015610012575f80fd5b5f3560e01c90816306fdde03146105d457508063095ea7b31461055257806318160ddd1461053557806323b872dd14610456578063313ce5671461043b57806340c10f191461033f57806342966c681461029f57806370a08231146102685780638da5cb5b1461024057806395d89b4114610125578063a9059cbb146100f45763dd62ed3e146100a0575f80fd5b346100f05760403660031901126100f0576100b96106cd565b6100c16106e3565b6001600160a01b039182165f908152600160209081526040808320949093168252928352819020549051908152f35b5f80fd5b346100f05760403660031901126100f05761011a6101106106cd565b60243590336106f9565b602060405160018152f35b346100f0575f3660031901126100f0576040515f6004548060011c90600181168015610236575b6020831081146102225782855290811561020657506001146101b1575b50819003601f01601f191681019067ffffffffffffffff82118183101761019d57610199829182604052826106a3565b0390f35b634e487b7160e01b5f52604160045260245ffd5b905060045f527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b5f905b8282106101f057506020915082010182610169565b60018160209254838588010152019101906101db565b90506020925060ff191682840152151560051b82010182610169565b634e487b7160e01b5f52602260045260245ffd5b91607f169161014c565b346100f0575f3660031901126100f0576005546040516001600160a01b039091168152602090f35b346100f05760203660031901126100f0576001600160a01b036102896106cd565b165f525f602052602060405f2054604051908152f35b346100f05760203660031901126100f057600435331561032c57335f525f60205260405f20548181106103135790805f923384528360205203604083205580600254036002556040519081527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60203392a3005b63391434e360e21b5f523360045260245260445260645ffd5b634b637e8f60e11b5f525f60045260245ffd5b346100f05760403660031901126100f0576103586106cd565b60055460243591906001600160a01b031633036103f6576001600160a01b03169081156103e357600254908082018092116103cf5760207fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef915f9360025584845283825260408420818154019055604051908152a3005b634e487b7160e01b5f52601160045260245ffd5b63ec442f0560e01b5f525f60045260245ffd5b60405162461bcd60e51b815260206004820152601e60248201527f4f6e6c7920746865206f776e65722063616e206d696e7420746f6b656e7300006044820152606490fd5b346100f0575f3660031901126100f057602060405160128152f35b346100f05760603660031901126100f05761046f6106cd565b6104776106e3565b6001600160a01b0382165f818152600160209081526040808320338452909152902054909260443592915f1981106104b5575b5061011a93506106f9565b83811061051a5784156105075733156104f45761011a945f52600160205260405f2060018060a01b0333165f526020528360405f2091039055846104aa565b634a1406b160e11b5f525f60045260245ffd5b63e602df0560e01b5f525f60045260245ffd5b8390637dc7a0d960e11b5f523360045260245260445260645ffd5b346100f0575f3660031901126100f0576020600254604051908152f35b346100f05760403660031901126100f05761056b6106cd565b602435903315610507576001600160a01b03169081156104f457335f52600160205260405f20825f526020528060405f20556040519081527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560203392a3602060405160018152f35b346100f0575f3660031901126100f0575f6003548060011c90600181168015610699575b6020831081146102225782855290811561020657506001146106445750819003601f01601f191681019067ffffffffffffffff82118183101761019d57610199829182604052826106a3565b905060035f527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5f905b82821061068357506020915082010182610169565b600181602092548385880101520191019061066e565b91607f16916105f8565b602060409281835280519182918282860152018484015e5f828201840152601f01601f1916010190565b600435906001600160a01b03821682036100f057565b602435906001600160a01b03821682036100f057565b6001600160a01b031690811561032c576001600160a01b03169182156103e357815f525f60205260405f205481811061077757817fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92602092855f525f84520360405f2055845f525f825260405f20818154019055604051908152a3565b8263391434e360e21b5f5260045260245260445260645ffdfea264697066735822122028b83578a3c90998cc038d7bd212cab560818fc515f84f4c8e25b14b73da0bc564736f6c634300081c0033",
    "sourceMap": "180:759:5:-:0;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;180:759:5;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;180:759:5;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;;;;180:759:5;;;;1712:13:1;180:759:5;;;;;;;;;;;-1:-1:-1;180:759:5;;;;;;;;;;;-1:-1:-1;180:759:5;;;;;;;;;;;;;-1:-1:-1;180:759:5;;;;;;;;;;;;;1712:13:1;180:759:5;;;;;1712:13:1;180:759:5;;;;-1:-1:-1;;;;;180:759:5;;;;1736:17:1;180:759:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;180:759:5;;;;;;;;;;;;;1712:13:1;180:759:5;;;;;1736:17:1;180:759:5;;428:18;180:759;;-1:-1:-1;;;;;;180:759:5;436:10;180:759;;;;;;7749:21:1;7745:93;;6418:21;180:759:5;;;;;;;;;6418:21:1;180:759:5;436:10;-1:-1:-1;180:759:5;-1:-1:-1;180:759:5;;;-1:-1:-1;180:759:5;;;;;;;;;;;;-1:-1:-1;7292:25:1;180:759:5;436:10;7292:25:1;;180:759:5;;;;;;;;;;;;;-1:-1:-1;180:759:5;;1736:17:1;180:759:5;;-1:-1:-1;180:759:5;7745:93:1;7794:32;;;-1:-1:-1;7794:32:1;-1:-1:-1;1736:17:1;180:759:5;;-1:-1:-1;7794:32:1;180:759:5;;;;-1:-1:-1;180:759:5;;;;;;;;;;1736:17:1;-1:-1:-1;180:759:5;;-1:-1:-1;180:759:5;;-1:-1:-1;180:759:5;;;;;;;;;;;;;;;;;;;;;1736:17:1;180:759:5;;;;;;;;;;1712:13:1;180:759:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1736:17:1;-1:-1:-1;180:759:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;180:759:5;;;;;;;;;-1:-1:-1;180:759:5;;;;;;;;-1:-1:-1;180:759:5;;1736:17:1;180:759:5;;-1:-1:-1;180:759:5;;;;;;;;;;;;-1:-1:-1;180:759:5;;1736:17:1;180:759:5;;-1:-1:-1;180:759:5;;;;;-1:-1:-1;180:759:5;;;;;;;;;;1712:13:1;-1:-1:-1;180:759:5;;-1:-1:-1;180:759:5;;-1:-1:-1;180:759:5;;;;;;;;;;;;;;;;;;;;;;;1712:13:1;180:759:5;;;;;;;;;;1712:13:1;180:759:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1712:13:1;-1:-1:-1;180:759:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;180:759:5;;;;;;;;;-1:-1:-1;180:759:5;;;;;;;;;;;;-1:-1:-1;180:759:5;;;;;;;;;-1:-1:-1;;180:759:5;;;-1:-1:-1;;;;;180:759:5;;;;;;;;;;:::o;:::-;;;;;;;;;;;;-1:-1:-1;;;;;180:759:5;;;;;;;;-1:-1:-1;;180:759:5;;;;:::i;:::-;;;;;;;;;;;;;;-1:-1:-1;180:759:5;;;;;;;;;;;;;;:::o",
    "deployedSourceMap": "180:759:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;180:759:5;;;;;;:::i;:::-;;;:::i;:::-;-1:-1:-1;;;;;180:759:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;180:759:5;;;;3564:5:1;180:759:5;;:::i;:::-;;;752:10:4;;3564:5:1;:::i;:::-;180:759:5;;;;;;;;;;;;;-1:-1:-1;;180:759:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;180:759:5;;;;;-1:-1:-1;;180:759:5;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;180:759:5;;;;217:20;180:759;;;-1:-1:-1;;;;;180:759:5;;;;;;;;;;;;;;-1:-1:-1;;180:759:5;;;;-1:-1:-1;;;;;180:759:5;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;180:759:5;;;;;;899:10;8290:21:1;8286:91;;899:10:5;180:759;;;;;;;;;6528:19:1;;;6524:117;;899:10:5;;180:759;899:10;;180:759;;;;;;;;;;;7010:21:1;180:759:5;;7010:21:1;180:759:5;;;;;;7292:25:1;180:759:5;899:10;7292:25:1;;180:759:5;6524:117:1;6575:50;;;180:759:5;6575:50:1;899:10:5;180:759;;;;;;;;6575:50:1;8286:91;8335:30;;;180:759:5;8335:30:1;180:759:5;;;;;8335:30:1;180:759:5;;;;;;-1:-1:-1;;180:759:5;;;;;;:::i;:::-;727:5;180:759;;;;;-1:-1:-1;;;;;180:759:5;713:10;:19;180:759;;-1:-1:-1;;;;;180:759:5;;7749:21:1;;7745:93;;6418:21;180:759:5;;;;;;;;;;;7292:25:1;180:759:5;;;6418:21:1;180:759:5;;;;;;;;;;;;;;;;;;;;;7292:25:1;180:759:5;;;;;;;;;;;;;7745:93:1;7794:32;;;180:759:5;7794:32:1;180:759:5;;;;;7794:32:1;180:759:5;;;-1:-1:-1;;;180:759:5;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;180:759:5;;;;;;;2858:2:1;180:759:5;;;;;;;;;-1:-1:-1;;180:759:5;;;;;;:::i;:::-;;;:::i;:::-;-1:-1:-1;;;;;180:759:5;;;;;;;;;;;;;;;752:10:4;180:759:5;;;;;;;;;;;;;;-1:-1:-1;;10882:36:1;;10878:316;;180:759:5;5137:5:1;;;;;:::i;10878:316::-;10939:24;;;10935:132;;10093:19;;10089:91;;752:10:4;10194:21:1;10190:92;;5137:5;180:759:5;;;;;;;;;;;;;;752:10:4;180:759:5;-1:-1:-1;180:759:5;;;;;-1:-1:-1;180:759:5;;;;;10878:316:1;;;10190:92;10239:31;;;180:759:5;10239:31:1;180:759:5;;;;;10239:31:1;10089:91;10136:32;;;180:759:5;10136:32:1;180:759:5;;;;;10136:32:1;10935:132;10991:60;;;;;180:759:5;10991:60:1;752:10:4;180:759:5;;;;;;;;10991:60:1;180:759:5;;;;;;-1:-1:-1;;180:759:5;;;;;3012:12:1;180:759:5;;;;;;;;;;;;;-1:-1:-1;;180:759:5;;;;;;:::i;:::-;;;752:10:4;;10093:19:1;10089:91;;-1:-1:-1;;;;;180:759:5;;10194:21:1;;10190:92;;752:10:4;180:759:5;;;;;;;;;-1:-1:-1;180:759:5;;;;;-1:-1:-1;180:759:5;;;;;;;10373:31:1;180:759:5;752:10:4;10373:31:1;;180:759:5;;;;;;;;;;;;;-1:-1:-1;;180:759:5;;;;;1909:5:1;180:759:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;180:759:5;;;;;-1:-1:-1;;180:759:5;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;1909:5:1;180:759:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;180:759:5;;;;:::o;:::-;;;;-1:-1:-1;;;;;180:759:5;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;180:759:5;;;;;;:::o;5558:308:1:-;-1:-1:-1;;;;;180:759:5;;5642:18:1;;5638:88;;-1:-1:-1;;;;;180:759:5;;5740:16:1;;5736:88;;180:759:5;5658:1:1;180:759:5;5658:1:1;180:759:5;;;5658:1:1;180:759:5;;6528:19:1;;;6524:117;;180:759:5;7292:25:1;180:759:5;;;;5658:1:1;180:759:5;5658:1:1;180:759:5;;;;5658:1:1;180:759:5;;;5658:1:1;180:759:5;5658:1:1;180:759:5;;;5658:1:1;180:759:5;;;;;;;;;;;;7292:25:1;5558:308::o;6524:117::-;6575:50;;;;5658:1;6575:50;;180:759:5;;;;;;5658:1:1;6575:50",
    "sourcePath": "c:/Users/goagv/Documents/PROGRAMACIONWEB3/ERC_ ANON/zk-erc20-project/src/MainContract.sol",
    "compiler": {
        "name": "solc",
        "version": "0.8.28+commit.7893614a"
    },
    "ast": {
        "absolutePath": "c:/Users/goagv/Documents/PROGRAMACIONWEB3/ERC_ ANON/zk-erc20-project/src/MainContract.sol",
        "exportedSymbols": {
            "Context": [
                785
            ],
            "ERC20": [
                651
            ],
            "IERC20": [
                729
            ],
            "IERC20Errors": [
                41
            ],
            "IERC20Metadata": [
                755
            ],
            "MainContract": [
                851
            ]
        },
        "id": 852,
        "license": "LGPL-3.0-only",
        "nodeType": "SourceUnit",
        "nodes": [
            {
                "absolutePath": "c:/Users/goagv/Documents/PROGRAMACIONWEB3/ERC_ ANON/zk-erc20-project/lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
                "file": "../lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
                "id": 787,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 852,
                "sourceUnit": 652,
                "src": "57:71:5",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "id": 788,
                "literals": [
                    "solidity",
                    "0.8",
                    ".28"
                ],
                "nodeType": "PragmaDirective",
                "src": "153:23:5"
            },
            {
                "abstract": false,
                "baseContracts": [
                    {
                        "baseName": {
                            "id": 789,
                            "name": "ERC20",
                            "nameLocations": [
                                "205:5:5"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 651,
                            "src": "205:5:5"
                        },
                        "id": 790,
                        "nodeType": "InheritanceSpecifier",
                        "src": "205:5:5"
                    }
                ],
                "canonicalName": "MainContract",
                "contractDependencies": [],
                "contractKind": "contract",
                "fullyImplemented": true,
                "id": 851,
                "linearizedBaseContracts": [
                    851,
                    651,
                    41,
                    755,
                    729,
                    785
                ],
                "name": "MainContract",
                "nameLocation": "189:12:5",
                "nodeType": "ContractDefinition",
                "nodes": [
                    {
                        "constant": false,
                        "functionSelector": "8da5cb5b",
                        "id": 792,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "232:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 851,
                        "src": "217:20:5",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                        },
                        "typeName": {
                            "id": 791,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "217:7:5",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                            }
                        },
                        "visibility": "public"
                    },
                    {
                        "body": {
                            "id": 816,
                            "nodeType": "Block",
                            "src": "417:153:5",
                            "statements": [
                                {
                                    "expression": {
                                        "id": 808,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 805,
                                            "name": "owner",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 792,
                                            "src": "428:5:5",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "expression": {
                                                "id": 806,
                                                "name": "msg",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 4294967281,
                                                "src": "436:3:5",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_magic_message",
                                                    "typeString": "msg"
                                                }
                                            },
                                            "id": 807,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberLocation": "440:6:5",
                                            "memberName": "sender",
                                            "nodeType": "MemberAccess",
                                            "src": "436:10:5",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            }
                                        },
                                        "src": "428:18:5",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "id": 809,
                                    "nodeType": "ExpressionStatement",
                                    "src": "428:18:5"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "expression": {
                                                    "id": 811,
                                                    "name": "msg",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 4294967281,
                                                    "src": "496:3:5",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_magic_message",
                                                        "typeString": "msg"
                                                    }
                                                },
                                                "id": 812,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberLocation": "500:6:5",
                                                "memberName": "sender",
                                                "nodeType": "MemberAccess",
                                                "src": "496:10:5",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "id": 813,
                                                "name": "initialSupply",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 798,
                                                "src": "508:13:5",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "id": 810,
                                            "name": "_mint",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 491,
                                            "src": "490:5:5",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                                "typeString": "function (address,uint256)"
                                            }
                                        },
                                        "id": 814,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "490:32:5",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 815,
                                    "nodeType": "ExpressionStatement",
                                    "src": "490:32:5"
                                }
                            ]
                        },
                        "id": 817,
                        "implemented": true,
                        "kind": "constructor",
                        "modifiers": [
                            {
                                "arguments": [
                                    {
                                        "id": 801,
                                        "name": "name",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 794,
                                        "src": "403:4:5",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_string_memory_ptr",
                                            "typeString": "string memory"
                                        }
                                    },
                                    {
                                        "id": 802,
                                        "name": "symbol",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 796,
                                        "src": "409:6:5",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_string_memory_ptr",
                                            "typeString": "string memory"
                                        }
                                    }
                                ],
                                "id": 803,
                                "kind": "baseConstructorSpecifier",
                                "modifierName": {
                                    "id": 800,
                                    "name": "ERC20",
                                    "nameLocations": [
                                        "397:5:5"
                                    ],
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 651,
                                    "src": "397:5:5"
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "397:19:5"
                            }
                        ],
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 799,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 794,
                                    "mutability": "mutable",
                                    "name": "name",
                                    "nameLocation": "322:4:5",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 817,
                                    "src": "308:18:5",
                                    "stateVariable": false,
                                    "storageLocation": "memory",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string"
                                    },
                                    "typeName": {
                                        "id": 793,
                                        "name": "string",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "308:6:5",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_string_storage_ptr",
                                            "typeString": "string"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 796,
                                    "mutability": "mutable",
                                    "name": "symbol",
                                    "nameLocation": "351:6:5",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 817,
                                    "src": "337:20:5",
                                    "stateVariable": false,
                                    "storageLocation": "memory",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string"
                                    },
                                    "typeName": {
                                        "id": 795,
                                        "name": "string",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "337:6:5",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_string_storage_ptr",
                                            "typeString": "string"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 798,
                                    "mutability": "mutable",
                                    "name": "initialSupply",
                                    "nameLocation": "376:13:5",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 817,
                                    "src": "368:21:5",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 797,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "368:7:5",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "297:99:5"
                        },
                        "returnParameters": {
                            "id": 804,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "417:0:5"
                        },
                        "scope": 851,
                        "src": "286:284:5",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "body": {
                            "id": 837,
                            "nodeType": "Block",
                            "src": "694:109:5",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "commonType": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                "id": 828,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "expression": {
                                                        "id": 825,
                                                        "name": "msg",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 4294967281,
                                                        "src": "713:3:5",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_magic_message",
                                                            "typeString": "msg"
                                                        }
                                                    },
                                                    "id": 826,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberLocation": "717:6:5",
                                                    "memberName": "sender",
                                                    "nodeType": "MemberAccess",
                                                    "src": "713:10:5",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "==",
                                                "rightExpression": {
                                                    "id": 827,
                                                    "name": "owner",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 792,
                                                    "src": "727:5:5",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "src": "713:19:5",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            {
                                                "hexValue": "4f6e6c7920746865206f776e65722063616e206d696e7420746f6b656e73",
                                                "id": 829,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "734:32:5",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_8fa88a194684442211b705dce8805cefd781b3ff3078656ee7fee5114a632ce4",
                                                    "typeString": "literal_string \"Only the owner can mint tokens\""
                                                },
                                                "value": "Only the owner can mint tokens"
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                {
                                                    "typeIdentifier": "t_stringliteral_8fa88a194684442211b705dce8805cefd781b3ff3078656ee7fee5114a632ce4",
                                                    "typeString": "literal_string \"Only the owner can mint tokens\""
                                                }
                                            ],
                                            "id": 824,
                                            "name": "require",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                4294967278,
                                                4294967278,
                                                4294967278
                                            ],
                                            "referencedDeclaration": 4294967278,
                                            "src": "705:7:5",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                "typeString": "function (bool,string memory) pure"
                                            }
                                        },
                                        "id": 830,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "705:62:5",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 831,
                                    "nodeType": "ExpressionStatement",
                                    "src": "705:62:5"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "id": 833,
                                                "name": "to",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 819,
                                                "src": "784:2:5",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "id": 834,
                                                "name": "amount",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 821,
                                                "src": "788:6:5",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "id": 832,
                                            "name": "_mint",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 491,
                                            "src": "778:5:5",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                                "typeString": "function (address,uint256)"
                                            }
                                        },
                                        "id": 835,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "778:17:5",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 836,
                                    "nodeType": "ExpressionStatement",
                                    "src": "778:17:5"
                                }
                            ]
                        },
                        "functionSelector": "40c10f19",
                        "id": 838,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "mint",
                        "nameLocation": "652:4:5",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 822,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 819,
                                    "mutability": "mutable",
                                    "name": "to",
                                    "nameLocation": "665:2:5",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 838,
                                    "src": "657:10:5",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 818,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "657:7:5",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 821,
                                    "mutability": "mutable",
                                    "name": "amount",
                                    "nameLocation": "677:6:5",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 838,
                                    "src": "669:14:5",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 820,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "669:7:5",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "656:28:5"
                        },
                        "returnParameters": {
                            "id": 823,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "694:0:5"
                        },
                        "scope": 851,
                        "src": "643:160:5",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "external"
                    },
                    {
                        "body": {
                            "id": 849,
                            "nodeType": "Block",
                            "src": "882:44:5",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "expression": {
                                                    "id": 844,
                                                    "name": "msg",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 4294967281,
                                                    "src": "899:3:5",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_magic_message",
                                                        "typeString": "msg"
                                                    }
                                                },
                                                "id": 845,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberLocation": "903:6:5",
                                                "memberName": "sender",
                                                "nodeType": "MemberAccess",
                                                "src": "899:10:5",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "id": 846,
                                                "name": "amount",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 840,
                                                "src": "911:6:5",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "id": 843,
                                            "name": "_burn",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 524,
                                            "src": "893:5:5",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                                "typeString": "function (address,uint256)"
                                            }
                                        },
                                        "id": 847,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "893:25:5",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 848,
                                    "nodeType": "ExpressionStatement",
                                    "src": "893:25:5"
                                }
                            ]
                        },
                        "functionSelector": "42966c68",
                        "id": 850,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "burn",
                        "nameLocation": "852:4:5",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 841,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 840,
                                    "mutability": "mutable",
                                    "name": "amount",
                                    "nameLocation": "865:6:5",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 850,
                                    "src": "857:14:5",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 839,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "857:7:5",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "856:16:5"
                        },
                        "returnParameters": {
                            "id": 842,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "882:0:5"
                        },
                        "scope": 851,
                        "src": "843:83:5",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "external"
                    }
                ],
                "scope": 852,
                "src": "180:759:5",
                "usedErrors": [
                    11,
                    16,
                    21,
                    30,
                    35,
                    40
                ],
                "usedEvents": [
                    663,
                    672
                ]
            }
        ],
        "src": "57:888:5"
    },
    "functionHashes": {
        "allowance(address,address)": "dd62ed3e",
        "approve(address,uint256)": "095ea7b3",
        "balanceOf(address)": "70a08231",
        "burn(uint256)": "42966c68",
        "decimals()": "313ce567",
        "mint(address,uint256)": "40c10f19",
        "name()": "06fdde03",
        "owner()": "8da5cb5b",
        "symbol()": "95d89b41",
        "totalSupply()": "18160ddd",
        "transfer(address,uint256)": "a9059cbb",
        "transferFrom(address,address,uint256)": "23b872dd"
    },
    "gasEstimates": {
        "creation": {
            "codeDepositCost": "398000",
            "executionCost": "infinite",
            "totalCost": "infinite"
        },
        "external": {
            "allowance(address,address)": "2812",
            "approve(address,uint256)": "24325",
            "balanceOf(address)": "2559",
            "burn(uint256)": "50649",
            "decimals()": "241",
            "mint(address,uint256)": "52813",
            "name()": "infinite",
            "owner()": "2456",
            "symbol()": "infinite",
            "totalSupply()": "2300",
            "transfer(address,uint256)": "50974",
            "transferFrom(address,address,uint256)": "75523"
        }
    }
}